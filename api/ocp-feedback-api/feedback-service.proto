syntax = "proto3";

import "google/api/annotations.proto";
import "feedback-messages.proto";
import "proposal-messages.proto";

package ocp.feedback.api;

option go_package = "github.com/ozoncp/ocp-feedback-api/pkg/ocp-feedback-api;ocp_feedback_api";

service OcpFeedbackApi {

    rpc CreateFeedbackV1(CreateFeedbackV1Request) returns (CreateFeedbackV1Response) {
        option (google.api.http) = {
            post: "/v1/feedbacks"
        };
    }

    rpc RemoveFeedbackV1(RemoveFeedbackV1Request) returns (RemoveFeedbackV1Response) {
        option (google.api.http) = {
            delete: "/v1/feedbacks/{feedback_id}"
        };
    }

    rpc DescribeFeedbackV1(DescribeFeedbackV1Request) returns (DescribeFeedbackV1Response) {
        option (google.api.http) = {
            get: "/v1/feedbacks/{feedback_id}"
        };
    }

    rpc ListFeedbacksV1(ListFeedbacksV1Request) returns (ListFeedbacksV1Response) {
        option (google.api.http) = {
            get: "/v1/feedbacks"
        };
    }

    rpc CreateProposalV1(CreateProposalV1Request) returns (CreateProposalV1Response) {
        option (google.api.http) = {
            post: "/v1/proposals"
        };
    }

    rpc RemoveProposalV1(RemoveProposalV1Request) returns (RemoveProposalV1Response) {
        option (google.api.http) = {
            delete: "/v1/proposals/{proposal_id}"
        };
    }

    rpc DescribeProposalV1(DescribeProposalV1Request) returns (DescribeProposalV1Response) {
        option (google.api.http) = {
            get: "/v1/proposals/{proposal_id}"
        };
    }

    rpc ListProposalsV1(ListProposalsV1Request) returns (ListProposalsV1Response) {
        option (google.api.http) = {
            get: "/v1/proposals"
        };
    }
}

