version: "3.7"

services:
    feedback-server:
        image: feedback:v1
        depends_on: 
            - postgres
            - kafka
        networks:
            - ocpnet   
        ports:
            - "2112:2112" # prometheus
            - "7000:7000" # grpc
            - "7001:7001" # gateway
        environment:
            WAIT_HOSTS: postgres:5432, kafka:29092
            PGUSER: ${PGUSER:-postgres}
            PGPASSWORD: ${PGPASSWORD:?database password not set}
            PGHOST: ${PGHOST:-postgres}
            PGPORT: ${PGPORT:-5432}
            PGDATABASE: ${PGDATABASE-postgres}
            PG_HOSTNAME: postgres
            KAFKA_BROKERS: kafka:29092
            JAEGER_HOST: jaeger:6831
            CHUNKS: 2
        deploy:
            restart_policy:
                condition: on-failure
            

    zookeeper:
        image: confluentinc/cp-zookeeper
        networks:
            - ocpnet   
        ports:
            - "2181:2181"
        environment:
            zk_id: "1"
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            ZOOKEEPER_SYNC_LIMIT: 2
  
    kafka:
        image: confluentinc/cp-kafka
        networks:
            - ocpnet   
        depends_on:
            - zookeeper
        ports:
            - "29092:29092"
        environment:
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
            
    postgres:
        image: postgres
        networks:
            - ocpnet   
        ports:
            - "5432:5432"
        environment: 
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "postgres"
            POSTGRES_DB: "postgres"
        volumes:
            - ./db:/docker-entrypoint-initdb.d/
            - pgdata:/var/lib/postgresql/data

    prometheus:
        image: prom/prometheus
        networks:
            - ocpnet   
        ports:
            - "9090:9090"
        volumes:
            - "./prometheus.yml:/etc/prometheus/prometheus.yml"

    jaeger:
        image: jaegertracing/all-in-one:latest
        networks:
            - ocpnet   
        ports:
            - "6831:6831/udp"
            - "16686:16686"
volumes:
    pgdata:

networks:
    ocpnet:
        driver: bridge


