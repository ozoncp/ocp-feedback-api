syntax = "proto3";


import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
package ocp.proposal.api;


option go_package = "github.com/ozoncp/ocp-feedback-api/pkg/ocp-proposal-api;ocp_proposal_api";

message Proposal {
    uint64 proposal_id = 1; 
    uint64 user_id = 2 [(validate.rules).uint64.gt = 0]; 
    uint64 lesson_id = 3 [(validate.rules).uint64.gt = 0]; 
    uint64 document_id = 4 [(validate.rules).uint64.gt = 0];
}

message CreateProposalV1Request {
    Proposal proposal = 1 [(validate.rules).message.required = true];
}

message CreateProposalV1Response {
    uint64 proposal_id = 1 [(validate.rules).uint64.gt = 0];
}

message CreateMultiProposalV1Request {
    repeated Proposal proposals = 1 [(validate.rules).repeated.min_items = 1];
}

message CreateMultiProposalV1Response {
    repeated uint64 proposals = 1 [(validate.rules).repeated.min_items = 1];
}

message RemoveProposalV1Request {
    uint64 proposal_id = 1  [(validate.rules).uint64.gt = 0];
}

message RemoveProposalV1Response {
    // some fields may be added in the future
    // we'll use GRPC status code to indicate an error
}

message DescribeProposalV1Request {
    uint64 proposal_id = 1  [(validate.rules).uint64.gt = 0];
}

message DescribeProposalV1Response {
    Proposal proposal = 1 [(validate.rules).message.required = true];

}

message ListProposalsV1Request {
    uint64 limit = 1  [(validate.rules).uint64.gt = 0];
    uint64 offset = 2;
}

message ListProposalsV1Response {
    repeated Proposal proposals = 1;
}

message UpdateProposalV1Request {
    Proposal proposal = 1 [(validate.rules).message.required = true];
}

message UpdateProposalV1Response {
    // some fields may be added in the future
    // we'll use GRPC status code to indicate an error
}

