syntax = "proto3";

import "google/api/annotations.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

package ocp.feedback.api;

option go_package = "github.com/ozoncp/ocp-feedback-api/pkg/ocp-feedback-api;ocp_feedback_api";

service OcpFeedbackApi {

    rpc CreateFeedbackV1(CreateFeedbackV1Request) returns (CreateFeedbackV1Response) {
        option (google.api.http) = {
            post: "/v1/feedbacks"
        };
    }

    rpc RemoveFeedbackV1(RemoveFeedbackV1Request) returns (RemoveFeedbackV1Response) {
        option (google.api.http) = {
            delete: "/v1/feedbacks/{feedback_id}"
        };
    }

    rpc DescribeFeedbackV1(DescribeFeedbackV1Request) returns (DescribeFeedbackV1Response) {
        option (google.api.http) = {
            get: "/v1/feedbacks/{feedback_id}"
        };
    }

    rpc ListFeedbacksV1(ListFeedbacksV1Request) returns (ListFeedbacksV1Response) {
        option (google.api.http) = {
            get: "/v1/feedbacks"
        };
    }

    rpc CreateProposalV1(CreateProposalV1Request) returns (CreateProposalV1Response) {
        option (google.api.http) = {
            post: "/v1/proposals"
        };
    }

    rpc RemoveProposalV1(RemoveProposalV1Request) returns (RemoveProposalV1Response) {
        option (google.api.http) = {
            delete: "/v1/proposals/{proposal_id}"
        };
    }

    rpc DescribeProposalV1(DescribeProposalV1Request) returns (DescribeProposalV1Response) {
        option (google.api.http) = {
            get: "/v1/proposals/{proposal_id}"
        };
    }

    rpc ListProposalsV1(ListProposalsV1Request) returns (ListProposalsV1Response) {
        option (google.api.http) = {
            get: "/v1/proposals"
        };
    }
}

// Feedback messages
message Feedback {
    uint64 feedback_id = 1; 
    uint64 user_id = 2;
    uint64 classroom_id = 3;
    string comment = 4;
}


message CreateFeedbackV1Request {
    uint64 user_id = 1  [(validate.rules).uint64.gt = 0];
    uint64 classroom_id = 2  [(validate.rules).uint64.gt = 0];
    string comment = 3;
}

message CreateFeedbackV1Response {
    uint64 feedback_id = 1;
}

message RemoveFeedbackV1Request {
    uint64 feedback_id = 1 [(validate.rules).uint64.gt = 0];
}

message RemoveFeedbackV1Response {
    // some fields may be added in the future
    // we'll use GRPC status code to indicate an error
}

message DescribeFeedbackV1Request {
    uint64 feedback_id = 1  [(validate.rules).uint64.gt = 0];
}

message DescribeFeedbackV1Response {
    Feedback feedback = 1;
}

message ListFeedbacksV1Request {
    uint64 limit = 1  [(validate.rules).uint64.gt = 0];
    uint64 offset = 2;
}

message ListFeedbacksV1Response {
    repeated Feedback feedbacks = 1;
}

// Proposal messages
message Proposal {
    uint64 proposal_id = 1;
    uint64 user_id = 2;
    uint64 lesson_id = 3;
    uint64 document_id = 4;
}

message CreateProposalV1Request {
    uint64 user_id = 1  [(validate.rules).uint64.gt = 0];
    uint64 lesson_id = 2  [(validate.rules).uint64.gt = 0];
    uint64 document_id = 3  [(validate.rules).uint64.gt = 0];
}

message CreateProposalV1Response {
    uint64 proposal_id = 1;
}

message RemoveProposalV1Request {
    uint64 proposal_id = 1  [(validate.rules).uint64.gt = 0];
}

message RemoveProposalV1Response {
    // some fields may be added in the future
    // we'll use GRPC status code to indicate an error
}

message DescribeProposalV1Request {
    uint64 proposal_id = 1  [(validate.rules).uint64.gt = 0];
}

message DescribeProposalV1Response {
    Proposal proposal = 1;

}

message ListProposalsV1Request {
    uint64 limit = 1  [(validate.rules).uint64.gt = 0];
    uint64 offset = 2;
}

message ListProposalsV1Response {
    repeated Proposal proposals = 1;
}






